sumosim

    run another cross validation with unlimited reward values Q-CV5.
        * Create branch Q-CV5 
        * Change description of existing trainings as limited, where limited means 
          that reward values were limited by min/max values.
        * Define new ParallelConfig based on the results of Q-CV4
        * Describe new training as unlimited.
        - Run new cross validation Q-CV5 

    mapping
        - call one simulation
        - extract mapping code to separate module sensor_mapping.py Class SensorMapping value Initial initial
        - simulation still working ?
        - define SensorMappingName  
        - add sensorMappingName to cmd-line
        - implement new sensor mapping NearBorder near-border 
        - Describe the mappings
        - add configuration values RewardHandler, SensorMapping, ... to parallel configs. e.g. 
          for sensor mapping SM values initial, near-border

    fetch-action 
        - currently eager: fetches the first max value. 
        - random max: Fetches a random value from all found max values.
        
    near-border-reward
        - reward a push higher if it takes place near the border.
            
    reports
        - 

doctus
    remove package.scala
    remove split into trait and impl. e.g. DoctusSwing and DoctusSwingImpl
    combine DoctusSwingUtil and DoctusSchedulerJvm in DoctusJvmUtil. Beware DoctusJvmUtil in sumosim

sumot parallel -n Q-CV5 --parallel-config q-cross-1 --max-parallel 10 --epoch-count 20000 \
      --db-host ben.local --keep-container --record --out-dir $HOME/tmp/sumosim/results-2025-02-Q-CV5
